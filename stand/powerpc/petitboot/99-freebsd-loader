#!/bin/sh
#
# SPDX-License-Identifier: BSD-2-Clause-FreeBSD
#
# Copyright (c) 2019 Brandon Bergren <bdragon@FreeBSD.org>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE PROJECT AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE PROJECT OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
# $FreeBSD$

# This is a script used to use petitboot in conjunction with the FreeBSD
# loader.petitboot.
#
# To use:
# 1) Copy this file to /etc/petitboot/boot.d/ in petitboot.
# 2) Ensure the string "freebsd_loader=1" occurs in your boot arguments.
# 
# This file does not implement Petitboot's secure boot.

# Since petitboot does not have the concept of using an alternative loader,
# we need to trap the boot event instead.
trap_to_freebsd_loader()
{
# /var/petitboot/mnt/dev/nvme0n1p1/kernel/kernel
	bootdev=/dev/`echo "$boot_image" | cut -d/ -f 6`
	kernel=`echo "$boot_image" | cut -d/ -f 7-`
	
	echo "loader.petitboot $bootdev $kernel" 


}

# Process $boot_args to detect whether we should kick in or not. 
case "$boot_args" in
	*freebsd_loader=1* ) trap_to_freebsd_loader;;
	* ) exit 0;;
esac 
